http://localhost:8000/users/add

  {
"username":"19269",
"hall":"2nd Floor Show Room"
}


http://localhost:8000/bookinghall/add

{
    "username":"19263",
   "guestname":"SteveRogers",
   "purpose":"Casual",
   "hall":"1st floor show Room",
   "meetingfrom":"2022-09-30",
   "meetingto":"2022-10-01",
   "food":"yes",
   "fooddetails":"Icecream",
   "transport":"yes",
   "transportdetails":"bike"
}

http://localhost:8000/bookinghall

const router = require('express').Router();
let Booking = require('../models/book')




  Booking.findOne({hall:hall,meetingfrom:{$gte:meetingfrom,$lt:meetingto},meetingto:{$gt:meetingfrom,$lte:meetingto}})
  .then((res)=>res.json())
  .then((data)=>{
    if(data!=null){
       return 'send error already date are exist'
    }
    else{
        //booking add
router.route('/add').post((req,res) =>{
        const username = req.body.username;
        const guestname = req.body.guestname;
        const purpose = req.body.purpose;
        const hall =req.body.hall;
        const meetingfrom = req.body.meetingfrom;
        const meetingto = req.body.meetingto;
        const food =  req.body.food;
        const fooddetails = req.body.fooddetails;
        const transport = req.body.transport;
        const transportdetails = req.body.transportdetails;

        const newBooking = new Booking({
            username,
            guestname,
            purpose,
            hall,
            meetingfrom,
            meetingto,
            food,
            fooddetails,
            transport,
            transportdetails

        }) 
     
            newBooking.save()
            .then(()=> res.json('Booking Added'))
            .catch(err =>res.status(400).json('Error'+err))
      
          
    
      
});
 }})

 
router.route('/').get((req,res)=>{
        Booking.find()
        .then (booking=>res.json(booking))
        .catch(err =>res.status(400).json('Error'+err))
});
//booking add
router.route('/add').post((req,res) =>{
        const username = req.body.username;
        const guestname = req.body.guestname;
        const purpose = req.body.purpose;
        const hall =req.body.hall;
        const meetingfrom = req.body.meetingfrom;
        const meetingto = req.body.meetingto;
        const food =  req.body.food;
        const fooddetails = req.body.fooddetails;
        const transport = req.body.transport;
        const transportdetails = req.body.transportdetails;

        const newBooking = new Booking({
            username,
            guestname,
            purpose,
            hall,
            meetingfrom,
            meetingto,
            food,
            fooddetails,
            transport,
            transportdetails

        }) 
     
            newBooking.save()
            .then(()=> res.json('Booking Added'))
            .catch(err =>res.status(400).json('Error'+err))
      
          
    
      
});
//find by id

router.route('/:id').get((req,res) =>{
    Booking.findById(req.params.id)
    .then(booking => res.json(booking))
    .catch(err =>res.status(400).json('Error'+err))
});

//find by id and delete

router.route('/:id').get((req,res)=>{
    Booking.findByIdAndDelete(req.params.id)
    .then(booking => res.json(booking))
    .catch(err =>res.status(400).json('Error'+err))
});

//update by id

router.route('update/:id').get((req,res)=>{
    Booking.findById(req.params.id)
    .then(booking =>{
        booking.username = req.body.username;
        booking.guestname = req.body.guestname;
        booking.purpose = req.body.purpose;
        booking.hall = req.body.hall;
        booking.meetingfrom = req.body.meetingfrom;
        booking.meetingto = req.body.meetingto;
        booking.food = req.body.food;
        booking.fooddetails = req.body.foodetails;
        booking.transport = req.body.transport;
        booking.transportdetails = req.body.transportdetails;
        
        booking.save()
        .then(()=>res.json('Hall Updated'))
        .catch(err =>res.status(400).json('Error'+err))
    })
    .catch(err =>res.status(400).json('Error'+err))

});

module.exports = router;


